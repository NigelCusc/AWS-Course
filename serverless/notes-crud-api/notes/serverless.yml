service: notes-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-central-1

functions:
  authorizer:
    handler: authorizer.handler
  createNote:
    handler: handler.createNote
    environment:
      NOTES_TABLE_NAME: !Ref NewResource
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt NewResource.Arn
    events: 
      - http:
          method: post
          path: notes
          authorizer: authorizer
  updateNote:
    handler: handler.updateNote
    environment:
      NOTES_TABLE_NAME: !Ref NewResource
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:updateItem
        Resource: !GetAtt NewResource.Arn
    events: 
      - http:
          method: put
          path: notes/{id}
          authorizer: authorizer
  deleteNote:
    handler: handler.deleteNote
    environment:
      NOTES_TABLE_NAME: !Ref NewResource
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:deleteItem
        Resource: !GetAtt NewResource.Arn
    events: 
      - http:
          method: delete
          path: notes/{id}
          authorizer: authorizer
  getAllNotes:
    handler: handler.getAllNotes
    environment:
      NOTES_TABLE_NAME: !Ref NewResource
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:scan
        Resource: !GetAtt NewResource.Arn
    events: 
      - http:
          method: get
          path: notes
          authorizer:
            name: NotesUserPool
            arn: arn:aws:cognito-idp:eu-central-1:400907305205:userpool/eu-central-1_dcrm4Zr8H

plugins:
  - serverless-iam-roles-per-function

# you can add CloudFormation resource templates here
resources:
  Resources:
    NewResource:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: notes
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: notesId
            AttributeType: S
        KeySchema:
          - AttributeName: notesId
            KeyType: HASH